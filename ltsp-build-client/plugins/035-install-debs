case "$MODE" in
    commandline)
        add_option "install-debs-dir" "`eval_gettext "install to the chroot all the .deb files contained in the provided directory"`" "advanced" "true"
        ;;

    configure)
        if [ -n "$option_install_debs_dir_value" ]; then
            INSTALL_DEBS_DIR="$option_install_debs_dir_value"
        fi
        if [ -d "$INSTALL_DEBS_DIR" ]; then
            # gdebi-core is *required* for dependency resolution.
            LATE_PACKAGES="$LATE_PACKAGES gdebi-core"
        fi
        ;;

    finalization)
        test -d "$INSTALL_DEBS_DIR" || return 0

        # Use \n to separate the filenames, in case they contain spaces
        debs="$(find "$INSTALL_DEBS_DIR" -iname '*.deb' -printf '/var/cache/apt/gdebi/%f\n')"
        test -n "$debs" || return 0

        # To get proper dependencies installed with gdebi, let's assemble
        # a local repository from the files in debs directory. If gdebi
        # requires dependencies, it can then find them using apt.

        echo "#/bin/sh" > $ROOT/usr/sbin/update-grub

        TMP_APTDIR="/var/cache/apt/gdebi"
        TMP_CHROOT_APTDIR="$ROOT/var/cache/apt/gdebi"

        echo "Installing deb files from $INSTALL_DEBS_DIR"
        mkdir -p "$TMP_CHROOT_APTDIR"
        echo -e "$debs"

        cp "$INSTALL_DEBS_DIR"/*.deb "$TMP_CHROOT_APTDIR/"
        apt-ftparchive packages "$TMP_CHROOT_APTDIR" | sed -e "s!$TMP_CHROOT_APTDIR!!g" > "$TMP_CHROOT_APTDIR/Packages"

        echo "deb file:$TMP_APTDIR/ /" > "$ROOT/etc/apt/sources.list.d/local.list"
        chroot "$ROOT" apt-get update

        find "$TMP_CHROOT_APTDIR" -iname '*.deb' -printf "$TMP_APTDIR/%f\n" | xargs -I {} -d '\n' chroot "$ROOT" gdebi --non-interactive {}
        rm -f $TMP_CHROOT_APTDIR/*.deb "$TMP_CHROOT_APTDIR/Packages"
        rmdir --ignore-fail-on-non-empty "$TMP_CHROOT_APTDIR"
        ;;
esac
