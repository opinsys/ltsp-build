case "$MODE" in
    commandline)
        add_option "puppet-module-dirs" \
          "`eval_gettext "a colon-separated list of puppet module directories"`" "advanced" "true"
        add_option "puppet-use-classes" \
          "`eval_gettext "a comma-separated list of puppet classes to use"`" \
          "advanced" "true"
        ;;
    configure)
        if [ -n "$option_puppet_module_dirs_value" ]; then
            PUPPET_MODULE_DIRS=$(echo $option_puppet_module_dirs_value \
                                   | tr ':' ' ')
        fi
        if [ -n "$option_puppet_use_classes_value" ]; then
            PUPPET_USE_CLASSES=$(echo $option_puppet_use_classes_value \
                                   | tr ',' ' ')
        fi
        if [ -n "$PUPPET_MODULE_DIRS" -a -n "$PUPPET_USE_CLASSES" ]; then
            # we need a puppet interpreter to use puppet classes
            LATE_PACKAGES="$LATE_PACKAGES puppet-common"
        fi
        ;;
    finalization)
        if [ -n "$PUPPET_MODULE_DIRS" -a -n "$PUPPET_USE_CLASSES" ]; then
            # XXX this probably should not be here, can we get this into some
            # XXX ltsp-client package?
            cat <<'EOF' > $ROOT/usr/sbin/ltsp-apply-puppet
#!/bin/sh

set -eu

set_pc=false
set_md=false

if ! args=$(getopt -n "$0" -o +c:d: -l \
  'puppet-use-classes:,puppet-module-dirs:' -- "$@"); then
  exit 1
fi

eval "set -- $args"
while true; do
  case "$1" in
    -c|--puppet-use-classes) shift; set_pc=true; puppet_classes=$1    ;;
    -d|--puppet-module-dirs) shift; set_md=true; puppet_module_dirs=$1;;
    --) shift; break ;;
     *) die "$0: Internal error!" ;;
  esac
  shift
done

if $set_pc; then
  echo "$puppet_classes" > /etc/puppet/ltsp-build-client/.classes
else
  puppet_classes="$(cat /etc/puppet/ltsp-build-client/.classes)"
fi

if $set_md; then
  echo "$puppet_module_dirs" > /etc/puppet/ltsp-build-client/.module_dirs
else
  puppet_module_dirs="$(cat /etc/puppet/ltsp-build-client/.module_dirs)"
fi

puppet_logfile_path="/var/log/puppet/ltsp-$(date +%Y-%m-%d-%H%M%S).log"

if env LTSP_HANDLE_DAEMONS=false \
     puppet apply \
       --detailed-exitcodes \
       --logdest console \
       --logdest "$puppet_logfile_path" \
       --execute "include $(echo $puppet_classes | xargs | tr ' ' ',')" \
       --modulepath "$(echo $puppet_module_dirs | xargs | tr ' ' ':')" \
   || [ $? -eq 2 ]; then
     rm -f /puppet-error.log
else
  ln -fns "$puppet_logfile_path" /puppet-error.log
fi

exit 0
EOF
            chmod 755 $ROOT/usr/sbin/ltsp-apply-puppet

            ltsp-chroot --puppet-module-dirs "$PUPPET_MODULE_DIRS" \
                        --puppet-use-classes "$PUPPET_USE_CLASSES" \
                        true
        fi
        ;;
esac
