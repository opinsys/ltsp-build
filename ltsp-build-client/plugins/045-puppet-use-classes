case "$MODE" in
    commandline)
        add_option "puppet-module-dirs" \
          "`eval_gettext "a colon-separated list of puppet module directories"`" "advanced" "true"
        add_option "puppet-use-classes" \
          "`eval_gettext "a comma-separated list of puppet classes to use"`" \
          "advanced" "true"
        ;;
    configure)
        if [ -n "$option_puppet_module_dirs_value" ]; then
            PUPPET_MODULE_DIRS=$(echo $option_puppet_module_dirs_value \
                                   | tr ':' ' ')
        fi
        if [ -n "$option_puppet_use_classes_value" ]; then
            PUPPET_USE_CLASSES=$(echo $option_puppet_use_classes_value \
                                   | tr ',' ' ')
        fi
        if [ -n "$PUPPET_MODULE_DIRS" -a -n "$PUPPET_USE_CLASSES" ]; then
            # we need a puppet interpreter to use puppet classes
            LATE_PACKAGES="$LATE_PACKAGES puppet-common"
        fi
        ;;
    finalization)
        if [ -n "$PUPPET_MODULE_DIRS" -a -n "$PUPPET_USE_CLASSES" ]; then
            # XXX use ltsp-apply-puppet-modules instead of this?
            # XXX (write that script first)

            mkdir -p $ROOT/etc/puppet/ltsp-build-client
            for puppet_src_dir in $PUPPET_MODULE_DIRS; do
              cp -pHR $puppet_src_dir $ROOT/etc/puppet/ltsp-build-client
            done

            # should also use --detailed-exitcodes and behave accordingly
            chroot $ROOT puppet apply \
              --modulepath="$(echo $PUPPET_MODULE_DIRS \
                               | xargs -n1 basename \
                               | awk '{ printf "/etc/puppet/ltsp-build-client/%s:", $1 }' \
                               | sed 's/:$//')" \
              --execute "include $(echo $PUPPET_USE_CLASSES | tr ' ' ',')"
        fi
        ;;
esac
